[{"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\index.js":"1","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\App.js":"2","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Home.js":"4","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Login.js":"5","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Register.js":"6","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Note.js":"7","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Main.js":"8","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\NavBar.js":"9","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Event.js":"10","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Todo.js":"11","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Calendar.js":"12","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\config.js":"13","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\SideBar.js":"14","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\CalTest.js":"15","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\MyModal.js":"16","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Week.js":"17","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\DateFormat.js":"18"},{"size":517,"mtime":1610974279593,"results":"19","hashOfConfig":"20"},{"size":1811,"mtime":1611049958117,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1610974279594,"results":"22","hashOfConfig":"20"},{"size":1656,"mtime":1610974279586,"results":"23","hashOfConfig":"20"},{"size":1348,"mtime":1610974279587,"results":"24","hashOfConfig":"20"},{"size":1365,"mtime":1610974279589,"results":"25","hashOfConfig":"20"},{"size":1068,"mtime":1611067452413,"results":"26","hashOfConfig":"20"},{"size":961,"mtime":1611044056309,"results":"27","hashOfConfig":"20"},{"size":645,"mtime":1610974279588,"results":"28","hashOfConfig":"20"},{"size":1211,"mtime":1610974279586,"results":"29","hashOfConfig":"20"},{"size":856,"mtime":1610974279590,"results":"30","hashOfConfig":"20"},{"size":1291,"mtime":1611041001354,"results":"31","hashOfConfig":"20"},{"size":183,"mtime":1610974279591,"results":"32","hashOfConfig":"20"},{"size":2811,"mtime":1611058225160,"results":"33","hashOfConfig":"20"},{"size":6964,"mtime":1611057017092,"results":"34","hashOfConfig":"20"},{"size":9356,"mtime":1611070383558,"results":"35","hashOfConfig":"20"},{"size":6258,"mtime":1611074988981,"results":"36","hashOfConfig":"20"},{"size":642,"mtime":1611072227753,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1xz1t2i",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\index.js",[],["86","87"],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\App.js",[],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Home.js",[],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Login.js",["88","89"],"import React from 'react';\r\nimport { Grid, Form, Button, Message, Icon, Header, Segment } from 'semantic-ui-react';\r\n\r\nconst divStyle = {\r\n    borderRadius: '25px',\r\n    padding: '1.5rem',\r\n    boxShadow: '8px 8px 15px #D9DDE6, -8px - 8px 15px #EFF5FE',\r\n    background: \"#E4E9F2\",\r\n};\r\n\r\nconst titleStyle = {\r\n    justifyContent: 'center'\r\n};\r\n\r\nconst LoginForm = () => {\r\n    return (\r\n        <Grid textAlign='center' style={divStyle} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' style={titleStyle} icon>\r\n                    <Icon name='user' />\r\n                    <Header.Content>\r\n                        login\r\n                    </Header.Content>\r\n                </Header>\r\n                <Form icon>\r\n                    <Form.Input icon='user' iconPosition='left' placeholder='username' />\r\n                    <Form.Input\r\n                        fluid\r\n                        icon='lock'\r\n                        iconPosition='left'\r\n                        placeholder='Password'\r\n                        type='password'\r\n                    />\r\n                    <Button color='teal' fluid>\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Register.js",["90","91"],"import React from 'react';\r\nimport { Grid, Form, Button, Message, Icon, Header, Segment } from 'semantic-ui-react';\r\n\r\nconst divStyle = {\r\n    borderRadius: '25px',\r\n    padding: '1.5rem',\r\n    boxShadow: '8px 8px 15px #D9DDE6, -8px - 8px 15px #EFF5FE',\r\n    background: \"#E4E9F2\",\r\n};\r\n\r\nconst titleStyle = {\r\n    justifyContent: 'center'\r\n};\r\n\r\nconst RegisterForm = () => {\r\n    return (\r\n        <Grid textAlign='center' style={divStyle} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' style={titleStyle} icon>\r\n                    <Icon name='user plus' />\r\n                    <Header.Content>\r\n                        Register\r\n                    </Header.Content>\r\n                </Header>\r\n                <Form icon>\r\n                    <Form.Input icon='user' iconPosition='left' placeholder='username' />\r\n                    <Form.Input\r\n                        fluid\r\n                        icon='lock'\r\n                        iconPosition='left'\r\n                        placeholder='Password'\r\n                        type='password'\r\n                    />\r\n                    <Button color='teal' fluid>\r\n                        Register\r\n                    </Button>\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Note.js",["92","93","94"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, TextArea } from 'semantic-ui-react'\r\nimport './styles.css'\r\n\r\nfunction Note() {\r\n    const [contents, setContents] = useState('')\r\n    const [init, setInit] = useState(false)\r\n\r\n    const writeInput = (msg) => {\r\n        setContents(msg)\r\n        //saveContents\r\n        console.log(contents)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   if(!init) getContents()\r\n    // })\r\n\r\n    // const getContents = async () => {\r\n    //   setInit(true)\r\n    //   const res = await instance.get('/getContents')\r\n    //   if (res.data.message === 'success') {\r\n    //     setContents(res.data.contents)\r\n    //   }\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <Form >\r\n                <TextArea\r\n                    placeholder='Take some notes...'\r\n                    onInput={(e) => writeInput(e.target.value)}\r\n                    value={contents}\r\n                    style={{ height: '100%', borderRadius: '3px' }}\r\n                />\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Main.js",[],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\NavBar.js",["95"],"import React from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { navBarColor, serviceTitle } from './../config';\r\n\r\nconst divStyle = {\r\n    width: \"100%\",\r\n    backgroundColor: navBarColor,\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n};\r\n\r\nconst NavBar = () => (\r\n    <div style={divStyle}>\r\n        <Header style={{ flexGrow: 100, margin: '20px', justifyContent: 'center', color: '#fff' }} as='h1' textAlign='center'>\r\n            { serviceTitle }\r\n        </Header>\r\n    </div>\r\n)\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\nexport default NavBar;","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Event.js",["96","97","98","99","100"],"import React, { useState, useEffect } from 'react'\r\nimport { Message, Icon, Grid, Input, Button } from 'semantic-ui-react'\r\nimport './styles.css'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nconst Event = (props) => {\r\n  //edit = 1 => go to edit mode\r\n  // const [edit, setEdit] = useState(false)\r\n  // const [name, setName] = useState('')\r\n  // const [deadLine, setDeadline] = useState([2020, 12, 14, 19, 16]); // 2020/12/14 19:16\r\n  // const [date, setDate] = useState([2020, 12, 14]); // 2020/12/14\r\n  // const [startTime, setStartTime] = useState([19, 16]); // 19:16\r\n  // const [endTime, setEndTime] = useState([19, 16]); // 19:16\r\n  // const [onCalendar, setOnCalendar] = useState(false)\r\n  // const [review, setReview] = useState(false)\r\n  // const [type, setType] = useState('')\r\n\r\n  // const [color, setColor] = useState('')\r\n  const {color} = props\r\n\r\n  return (\r\n    <div id=\"event-container\">\r\n      <Message color={color} style={{ height: 30, width: '100%', draggable: 'true', overflow: 'auto', padding:0}}>\r\n        <Icon name='edit' style={{position: 'absolute', right: 10, top: 3.5, display: 'inline', width:1}} />\r\n        event\r\n      </Message>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Event;","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Todo.js",["101","102","103","104","105","106"],"import { StylesProvider } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Event from './Event'\r\nimport './styles.css'\r\n\r\nconst Todo = () => {\r\n  const [contents, setContents] = useState('')\r\n  const [init, setInit] = useState(false)\r\n\r\n  const todoStyle = {\r\n      background: \"#FFFFFF\",\r\n      display: 'grid',\r\n      gridTemplateColumns: 'auto auto auto',\r\n      gridTemplateRows: '10% 90%',\r\n      textAlign: 'center',\r\n      borderRadius: '3px',\r\n      gridGap: '3px',\r\n      padding: '3px',\r\n      border: '1px solid rgba(34, 36, 38, 0.15)'\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div style={todoStyle}>\r\n        <div>TODO</div>\r\n        <div>DOING</div>\r\n        <div>COMPLETED</div>\r\n        <Event color='yellow'/>\r\n        <Event color='purple'/>\r\n        <Event color='red'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Calendar.js",["107"],"import React, { Component } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed\r\n\r\n\r\nclass Calendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const CalendarStyle = {\r\n            margin: \"0vw\",\r\n            background: \"#FFFFFF\",\r\n            textAlign: \"left\"\r\n        };\r\n\r\n        return (\r\n            <div style={CalendarStyle} className=\"Calendar\">\r\n                <FullCalendar\r\n                    height=\"100%\"\r\n                    aspectRatio=\"1\"\r\n                    plugins={[dayGridPlugin, interactionPlugin]}\r\n                    initialView=\"dayGridMonth\"\r\n                    dateClick={this.handleDateClick}\r\n                    editable={true}\r\n                    headerToolbar={{\r\n                        left: \"\",\r\n                        center: \"title\",\r\n                        right: \"\"\r\n                    }}\r\n                    events={[\r\n                        { title: '', date: '2021-01-18' },\r\n                        { title: '', date: '2021-01-19' },\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Calendar","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\config.js",[],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\SideBar.js",["108","109","110","111"],"import React, { useEffect, useState, useRef, memo } from \"react\";\r\nimport \"./styles.css\";\r\nimport { sideBarColor } from './../config';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\r\n\r\nconst sideBarStyle = {\r\n    height: '90vh',\r\n    background: sideBarColor\r\n}\r\n\r\nconst ExternalEvent = memo(({ event }) => {\r\n    let elRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        let draggable = new Draggable(elRef.current, {\r\n            eventData: function () {\r\n                return { ...event, create: true };\r\n            }\r\n        });\r\n\r\n        // a cleanup function\r\n        return () => draggable.destroy();\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={elRef}\r\n            className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\r\n            title={event.title}\r\n            style={{\r\n                backgroundColor: event.color,\r\n                borderColor: event.color,\r\n                cursor: \"pointer\"\r\n            }}\r\n        >\r\n            <div className=\"fc-event-main\">\r\n                <div>\r\n                    <strong>{event.title}</strong>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst SideBar = () => {\r\n    const [state, setState] = useState({\r\n        weekendsVisible: true,\r\n        externalEvents: [\r\n            { title: \"Art 1\", color: \"#0097a7\", id: 34432 },\r\n            { title: \"Art 2\", color: \"#f44336\", id: 323232 },\r\n            { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\r\n            { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\r\n        ]\r\n    });\r\n    // add external events\r\n    const addEvent = () => {\r\n        let newEvent = {\r\n            id: 3433,\r\n            title: \"Timed event\",\r\n            color: \"#333333\",\r\n            start: \"2020-12-31\",\r\n            end: \"2020-12-31\",\r\n            custom: \"custom stuff\"\r\n        };\r\n\r\n        setState((state) => {\r\n            return {\r\n                ...state,\r\n                externalEvents: state.externalEvents.concat(newEvent)\r\n            };\r\n        });\r\n    };\r\n    return (\r\n        <div style={{ sideBarStyle }}>\r\n            <div style={{ margin: \"0 0 20px\" }}>\r\n                <input\r\n                    type=\"submit\"\r\n                    name=\"name\"\r\n                    onClick={addEvent}\r\n                    value=\"add external event\"\r\n                />\r\n            </div>\r\n            <div id=\"external-events\">\r\n                {state.externalEvents.map((event) => (\r\n                    <ExternalEvent key={event.id} event={event} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar",["112","113"],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\CalTest.js",[],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\MyModal.js",[],"C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\Week.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, { useEffect, useState, useRef, memo } from \"react\";\r\nimport { Modal, Header, Form, Input, TextArea, Button, Select, Icon } from 'semantic-ui-react'\r\nimport \"./styles.css\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\r\nimport PropTypes from 'prop-types'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./DateFormat\";\r\n// import MyModal from './MyModal';\r\n\r\nconst WeekStyle = {\r\n    background: \"#FFFFFF\"\r\n}\r\n\r\nconst Week = () => {\r\n    const [state, setState] = useState({\r\n        weekendsVisible: true,\r\n        calendarEvents: [\r\n            {\r\n                id: 1,\r\n                title: \"Sleep\",\r\n                color: \"#388e3c\",\r\n                start: \"2021-01-19T00:00:00\",\r\n                end: \"2021-01-19T08:00:00\"\r\n            }\r\n        ]\r\n    });\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const [startDate, setStartDate] = useState()\r\n    const [endDate, setEndDate] = useState()\r\n    const [color, setColor] = useState()\r\n    const [title, setTitle] = useState()\r\n    const [id, setId] = useState('0')\r\n    \r\n    const options = [\r\n        { key: 'm', text: 'Male', value: 'male' },\r\n        { key: 'f', text: 'Female', value: 'female' },\r\n        { key: 'o', text: 'Other', value: 'other' },\r\n    ]\r\n    \r\n    const handleEventReceive = (eventInfo) => {\r\n        console.log(eventInfo);\r\n        setModalOpen(true);      \r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"setModalOpen changes\")\r\n        const newEvent = {\r\n            //id: id,\r\n            //title: title,\r\n            //color: color,\r\n            start: startDate,\r\n            end: endDate,\r\n        };\r\n\r\n        setState((state) => {\r\n            return {\r\n                ...state,\r\n                calendarEvents: state.calendarEvents.concat(newEvent)\r\n            };\r\n        });\r\n    }, state)\r\n\r\n    return (\r\n        <div style={WeekStyle} className=\"Week\">\r\n            <FullCalendar\r\n                height=\"100%\"\r\n                plugins={[dayGridPlugin, interactionPlugin]}\r\n                initialView=\"dayGridWeek\"\r\n                headerToolbar={false}\r\n                editable={true}\r\n                selectable={true}\r\n                selectMirror={true}\r\n                dayMaxEvents={true}\r\n                weekends={state.weekendsVisible}\r\n                events={state.calendarEvents}\r\n                droppable={true}\r\n                eventReceive={handleEventReceive}\r\n            />\r\n            <Modal\r\n                key='modal1'\r\n                open={modalOpen}\r\n                size='small'\r\n                closeOnEscape={true}\r\n                closeOnRootNodeClick={true}\r\n            >\r\n                <Header icon='browser' content='Event' />\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field\r\n                            id='form-input-control-event-title'\r\n                            control={Input}\r\n                            label='Event Title'\r\n                            placeholder='Event Title'\r\n                        />\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field>\r\n                                <Form.Field\r\n                                    id='form-input-control-start-time'\r\n                                    label='Start Time'\r\n                                />\r\n                                <DatePicker\r\n                                    selected={startDate}\r\n                                    onChange={(date) => { setStartDate(date) }}\r\n                                    showTimeSelect={true}\r\n                                    timeIntervals={15}\r\n                                    dateFormat=\"yyyy-MM-dd hh:mm:ss\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Form.Field\r\n                                    id='form-input-control-end-time'\r\n                                    label='End Time'\r\n                                />\r\n                                <DatePicker\r\n                                    selected={endDate}\r\n                                    onChange={(date) => { setEndDate(date) }}\r\n                                    showTimeSelect={true}\r\n                                    timeIntervals={15}\r\n                                    dateFormat=\"yyyy-MM-dd hh:mm:ss\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Select\r\n                                label='Tag'\r\n                                options={options}\r\n                                placeholder='Event Type'\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button\r\n                        negative\r\n                        type='button'\r\n                        icon='remove'\r\n                        labelPosition='right'\r\n                        onClick={\r\n                            (e) => {\r\n                                setModalOpen(false)\r\n                            }\r\n                        }\r\n                        content='Cancel'\r\n                    />\r\n                    <Button\r\n                        positive\r\n                        type='button'\r\n                        icon='checkmark'\r\n                        labelPosition='right'\r\n                        onClick={\r\n                            (e) => {\r\n                                setModalOpen(false)\r\n                            }\r\n                        }\r\n                        content='Confirm'\r\n                    />\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/*\r\nModal.propTypes = {\r\n    modalOpen: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    valueIntoModal: PropTypes.string.isRequired\r\n}*/\r\n\r\nexport default Week\r\n","C:\\Users\\user\\Documents\\GitHub\\Life-Management\\Life-Management\\frontend\\src\\components\\DateFormat.js",["130","131"],"Date.prototype.format = function (fmt) {\r\n    var o = {\r\n        \"M+\": this.getMonth() + 1, \r\n        \"d+\": this.getDate(), \r\n        \"h+\": this.getHours(), \r\n        \"m+\": this.getMinutes(), \r\n        \"s+\": this.getSeconds(), \r\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), \r\n        \"S\": this.getMilliseconds() \r\n    };\r\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n    for (var k in o)\r\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n    return fmt;\r\n}",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":30,"nodeType":"138","messageId":"139","endLine":2,"endColumn":37},{"ruleId":"136","severity":1,"message":"140","line":2,"column":53,"nodeType":"138","messageId":"139","endLine":2,"endColumn":60},{"ruleId":"136","severity":1,"message":"137","line":2,"column":30,"nodeType":"138","messageId":"139","endLine":2,"endColumn":37},{"ruleId":"136","severity":1,"message":"140","line":2,"column":53,"nodeType":"138","messageId":"139","endLine":2,"endColumn":60},{"ruleId":"136","severity":1,"message":"141","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"142","line":7,"column":12,"nodeType":"138","messageId":"139","endLine":7,"endColumn":16},{"ruleId":"136","severity":1,"message":"143","line":7,"column":18,"nodeType":"138","messageId":"139","endLine":7,"endColumn":25},{"ruleId":"136","severity":1,"message":"144","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":14},{"ruleId":"136","severity":1,"message":"145","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"141","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"146","line":2,"column":25,"nodeType":"138","messageId":"139","endLine":2,"endColumn":29},{"ruleId":"136","severity":1,"message":"147","line":2,"column":31,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"136","severity":1,"message":"148","line":2,"column":38,"nodeType":"138","messageId":"139","endLine":2,"endColumn":44},{"ruleId":"136","severity":1,"message":"149","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":24},{"ruleId":"136","severity":1,"message":"141","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"136","severity":1,"message":"150","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":18},{"ruleId":"136","severity":1,"message":"151","line":7,"column":20,"nodeType":"138","messageId":"139","endLine":7,"endColumn":31},{"ruleId":"136","severity":1,"message":"142","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":14},{"ruleId":"136","severity":1,"message":"143","line":8,"column":16,"nodeType":"138","messageId":"139","endLine":8,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":8,"column":5,"nodeType":"154","messageId":"155","endLine":10,"endColumn":6},{"ruleId":"136","severity":1,"message":"156","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"157","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":21},{"ruleId":"136","severity":1,"message":"158","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":22},{"ruleId":"136","severity":1,"message":"159","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":25},{"ruleId":"132","replacedBy":"160"},{"ruleId":"134","replacedBy":"161"},{"ruleId":"136","severity":1,"message":"162","line":1,"column":38,"nodeType":"138","messageId":"139","endLine":1,"endColumn":44},{"ruleId":"136","severity":1,"message":"163","line":1,"column":46,"nodeType":"138","messageId":"139","endLine":1,"endColumn":50},{"ruleId":"136","severity":1,"message":"164","line":2,"column":38,"nodeType":"138","messageId":"139","endLine":2,"endColumn":46},{"ruleId":"136","severity":1,"message":"165","line":2,"column":56,"nodeType":"138","messageId":"139","endLine":2,"endColumn":62},{"ruleId":"136","severity":1,"message":"166","line":2,"column":64,"nodeType":"138","messageId":"139","endLine":2,"endColumn":68},{"ruleId":"136","severity":1,"message":"158","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":22},{"ruleId":"136","severity":1,"message":"167","line":7,"column":29,"nodeType":"138","messageId":"139","endLine":7,"endColumn":38},{"ruleId":"136","severity":1,"message":"168","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":17},{"ruleId":"136","severity":1,"message":"169","line":35,"column":12,"nodeType":"138","messageId":"139","endLine":35,"endColumn":17},{"ruleId":"136","severity":1,"message":"170","line":35,"column":19,"nodeType":"138","messageId":"139","endLine":35,"endColumn":27},{"ruleId":"136","severity":1,"message":"171","line":36,"column":12,"nodeType":"138","messageId":"139","endLine":36,"endColumn":17},{"ruleId":"136","severity":1,"message":"172","line":36,"column":19,"nodeType":"138","messageId":"139","endLine":36,"endColumn":27},{"ruleId":"136","severity":1,"message":"173","line":37,"column":12,"nodeType":"138","messageId":"139","endLine":37,"endColumn":14},{"ruleId":"136","severity":1,"message":"174","line":37,"column":16,"nodeType":"138","messageId":"139","endLine":37,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":66,"column":8,"nodeType":"138","endLine":66,"endColumn":13},{"ruleId":"175","severity":1,"message":"177","line":66,"column":8,"nodeType":"138","endLine":66,"endColumn":13,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":1,"nodeType":"181","messageId":"182","endLine":15,"endColumn":2},{"ruleId":"183","severity":1,"message":"184","line":13,"column":97,"nodeType":"185","messageId":"182","endLine":13,"endColumn":99},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'useEffect' is defined but never used.","'init' is assigned a value but never used.","'setInit' is assigned a value but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'Grid' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'StylesProvider' is defined but never used.","'contents' is assigned a value but never used.","'setContents' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FullCalendar' is defined but never used.","'dayGridPlugin' is defined but never used.","'timeGridPlugin' is defined but never used.","'interactionPlugin' is defined but never used.",["186"],["187"],"'useRef' is defined but never used.","'memo' is defined but never used.","'TextArea' is defined but never used.","'Select' is defined but never used.","'Icon' is defined but never used.","'Draggable' is defined but never used.","'PropTypes' is defined but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'endDate' and 'startDate'. Either include them or remove the dependency array.",["188"],"no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},"Update the dependencies array to be: [endDate, startDate]",{"range":"191","text":"192"},[2066,2071],"[endDate, startDate]"]