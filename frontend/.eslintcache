[{"/usr/src/app/src/index.js":"1","/usr/src/app/src/App.js":"2","/usr/src/app/src/reportWebVitals.js":"3","/usr/src/app/src/ApolloProvider.js":"4","/usr/src/app/src/components/Home.js":"5","/usr/src/app/src/components/Register.js":"6","/usr/src/app/src/components/Event.js":"7","/usr/src/app/src/components/Login.js":"8","/usr/src/app/src/components/Note.js":"9","/usr/src/app/src/components/NavBar.js":"10","/usr/src/app/src/components/Main.js":"11","/usr/src/app/src/context/auth.js":"12","/usr/src/app/src/util/UnAuthRoute.js":"13","/usr/src/app/src/util/AuthRoute.js":"14","/usr/src/app/src/util/hooks.js":"15","/usr/src/app/src/config.js":"16","/usr/src/app/src/components/Week.js":"17","/usr/src/app/src/components/Todo.js":"18","/usr/src/app/src/components/Calendar.js":"19","/usr/src/app/src/components/SideBar.js":"20","/usr/src/app/src/graphql/index.js":"21","/usr/src/app/src/components/TodoComponents/Column.jsx":"22","/usr/src/app/src/components/TodoComponents/CustomDragLayer.jsx":"23","/usr/src/app/src/graphql/mutations.js":"24","/usr/src/app/src/graphql/queries.js":"25","/usr/src/app/src/graphql/subscriptions.js":"26","/usr/src/app/src/components/TodoComponents/Card.jsx":"27","/usr/src/app/src/components/TodoComponents/EmptyCard.jsx":"28","/usr/src/app/src/components/TodoComponents/DraggableCard.jsx":"29"},{"size":573,"mtime":1611096824683,"results":"30","hashOfConfig":"31"},{"size":1374,"mtime":1611127432891,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1611096799255,"results":"33","hashOfConfig":"31"},{"size":763,"mtime":1611097785212,"results":"34","hashOfConfig":"31"},{"size":1282,"mtime":1611128416131,"results":"35","hashOfConfig":"31"},{"size":5023,"mtime":1611128382219,"results":"36","hashOfConfig":"31"},{"size":1180,"mtime":1611096824683,"results":"37","hashOfConfig":"31"},{"size":4609,"mtime":1611128636194,"results":"38","hashOfConfig":"31"},{"size":1697,"mtime":1611096824683,"results":"39","hashOfConfig":"31"},{"size":1709,"mtime":1611127934809,"results":"40","hashOfConfig":"31"},{"size":1236,"mtime":1611096824683,"results":"41","hashOfConfig":"31"},{"size":1274,"mtime":1611096799255,"results":"42","hashOfConfig":"31"},{"size":427,"mtime":1611096824683,"results":"43","hashOfConfig":"31"},{"size":419,"mtime":1611096799255,"results":"44","hashOfConfig":"31"},{"size":397,"mtime":1611096799255,"results":"45","hashOfConfig":"31"},{"size":1379,"mtime":1611124938026,"results":"46","hashOfConfig":"31"},{"size":4567,"mtime":1611096824683,"results":"47","hashOfConfig":"31"},{"size":3414,"mtime":1611096824683,"results":"48","hashOfConfig":"31"},{"size":1365,"mtime":1611096824683,"results":"49","hashOfConfig":"31"},{"size":2708,"mtime":1611096824683,"results":"50","hashOfConfig":"31"},{"size":408,"mtime":1611096824683,"results":"51","hashOfConfig":"31"},{"size":1587,"mtime":1611096824683,"results":"52","hashOfConfig":"31"},{"size":1579,"mtime":1611096824683,"results":"53","hashOfConfig":"31"},{"size":6613,"mtime":1611096824683,"results":"54","hashOfConfig":"31"},{"size":1095,"mtime":1611096824683,"results":"55","hashOfConfig":"31"},{"size":266,"mtime":1611096824683,"results":"56","hashOfConfig":"31"},{"size":1386,"mtime":1611096824683,"results":"57","hashOfConfig":"31"},{"size":403,"mtime":1611096824683,"results":"58","hashOfConfig":"31"},{"size":610,"mtime":1611096824683,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"156u4i8",{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/usr/src/app/src/index.js",["127","128"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloProvider from './ApolloProvider'\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  ApolloProvider,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["129","130"],"/usr/src/app/src/App.js",["131","132","133"],"/usr/src/app/src/reportWebVitals.js",[],"/usr/src/app/src/ApolloProvider.js",[],"/usr/src/app/src/components/Home.js",["134","135","136","137"],"/usr/src/app/src/components/Register.js",["138","139"],"/usr/src/app/src/components/Event.js",["140","141","142","143","144"],"import React, { useState, useEffect } from 'react'\nimport { Message, Icon, Grid, Input, Button } from 'semantic-ui-react'\nimport './styles.css'\nimport 'semantic-ui-css/semantic.min.css'\n\n\nconst Event = (props) => {\n  //edit = 1 => go to edit mode\n  // const [edit, setEdit] = useState(false)\n  // const [name, setName] = useState('')\n  // const [deadLine, setDeadline] = useState([2020, 12, 14, 19, 16]); // 2020/12/14 19:16\n  // const [date, setDate] = useState([2020, 12, 14]); // 2020/12/14\n  // const [startTime, setStartTime] = useState([19, 16]); // 19:16\n  // const [endTime, setEndTime] = useState([19, 16]); // 19:16\n  // const [onCalendar, setOnCalendar] = useState(false)\n  // const [review, setReview] = useState(false)\n  // const [type, setType] = useState('')\n\n  // const [color, setColor] = useState('')\n  const {color} = props\n\n  return (\n    <div id=\"event-container\">\n      <Message color={color} style={{ height: 30, width: '100%', draggable: 'true', overflow: 'auto', padding:0}}>\n        <Icon name='edit' style={{position: 'absolute', right: 10, top: 3.5, display: 'inline', width:1}} />\n        event\n      </Message>\n    </div>\n  )\n}\n\nexport default Event;","/usr/src/app/src/components/Login.js",["145","146"],"/usr/src/app/src/components/Note.js",["147","148","149"],"import React, { useState, useEffect } from 'react'\nimport { Form, TextArea } from 'semantic-ui-react'\nimport { UPDATE_NOTE, GET_NOTE } from '../graphql'\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from '../util/hooks';\n\nfunction Note() {\n  //const [contents, setContents] = useState('')\n  const { values, onChange } = useForm(() => {}, {\n    msg: ''\n  });\n  // const { user } = useContext(AuthContext);\n\n  const [updateNotes] = useMutation(UPDATE_NOTE, {\n    update(a, b, c, d, e, f) {\n      console.log(a)\n      console.log(b)\n      console.log(c)\n      console.log(d)\n      console.log(e)\n      console.log(f)\n      //data.getNote = [result.data.updateNote, ...data.getNote];\n      //proxy.writeQuery({ query: GET_NOTE, data });\n    },\n    onError(err) {\n      console.log(err)\n    },\n    variables: values,\n  });\n\n  // const [updateNotes, { error }] = useMutation(UPDATE_NOTE, {\n  //   update(proxy, result) {\n  //     console.log('ddd')\n  //     const data = proxy.readQuery({\n  //       query: GET_NOTE\n  //     });\n  //     console.log('dee')\n  //     console.log(data)\n  //     //data.getNote = [result.data.updateNote, ...data.getNote];\n  //     //proxy.writeQuery({ query: GET_NOTE, data });\n  //   },\n  //   onError(err) {\n  //     console.log(err)\n  //   },\n  //   variables: values,\n  // });\n\n  const writeInput = (event) => {\n    onChange(event)\n    updateNotes();\n  }\n\n  return (\n    <>\n    <Form >\n      <TextArea\n        placeholder='Take some notes...'\n        onInput={writeInput}\n        name='msg'\n        value={values.msg}\n        style={{height:'100%', borderRadius: '3px', resize: 'none' }}\n      />\n    </Form>\n    </>\n  )\n}\n\nexport default Note\n","/usr/src/app/src/components/NavBar.js",["150"],"/usr/src/app/src/components/Main.js",[],"/usr/src/app/src/context/auth.js",[],"/usr/src/app/src/util/UnAuthRoute.js",[],"/usr/src/app/src/util/AuthRoute.js",[],"/usr/src/app/src/util/hooks.js",[],"/usr/src/app/src/config.js",[],"/usr/src/app/src/components/Week.js",["151","152","153","154"],"import React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5backend from \"react-dnd-html5-backend\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Column from \"./TodoComponents/Column\";\nimport CustomDragLayer from \"./TodoComponents/CustomDragLayer\";\nimport './Todo.scss';\n\nimport { GET_TODOS } from './../graphql/index';\nimport { testTodos } from './../config';\n\nconst Todo = () => {\n    // const [myTasks, moveMyTask] = useState(tasks);\n\n    // const {loading, error, data} = useQuery(GET_TODOS);\n    const loading = true;\n    const data = { 'getTodo': testTodos }\n\n    const parseQueryData = (todos) => {\n        return [\n            {\n                title: 'Todo',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Todo') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'Doing',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Doing') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'Completed',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Completed') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'e',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Todo') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'a',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Doing') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'd',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Completed') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'd',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Completed') return true;\n                    else return false;\n                })\n            }\n        ];\n    }\n    const t = parseQueryData(data.getTodo);\n\n    const [myTasks, moveMyTask] = useState(t);\n\n    const handleMoveMyTask = (from, to) => {\n        // TODO: comunicate with backend `updateTodo`, if update successfully then run\n        // TODO: else CRASH(server error?)\n        const { task, columnIndex: fromColumnIndex, index } = from;\n        console.log({ 'columnidx': fromColumnIndex })\n        const { columnIndex: toColumnIndex } = to;\n        console.log({\n            from, to\n        })\n\n        const newMyTasks = [...myTasks];\n        // remove task\n        if (fromColumnIndex !== -1) newMyTasks[fromColumnIndex].tasks.splice(index, 1);\n        // move task\n        newMyTasks[toColumnIndex].tasks.push(task);\n        moveMyTask(newMyTasks);\n    };\n\n    const delIconClick = (event, { columnIndex, index, id }) => {\n        console.log('week')\n        event.stopPropagation();\n        // TODO: comunicate with backend `deleteTodo`, if delete successfully then run the following\n        const newMyTasks = [...myTasks];\n        newMyTasks[columnIndex].tasks.splice(index, 1);\n        moveMyTask(newMyTasks);\n    }\n    const addTodo = (title) => {\n        // TODO: comunicate with backend `addTodo`, if add successfully then run\n        // TODO: trigger input form\n        alert('add ' + title);\n    }\n\n    const editTodo = ({ columnIndex, index, id, name }) => {\n        // TODO: comunicate with backend `updateTodo`, if update successfully then run\n        // TODO: trigger input form\n        alert('edit ' + name);\n    }\n\n    return (\n        <DndProvider backend={HTML5backend}>\n            <CustomDragLayer />\n            <div className=\"task-board\" style={{\n                display: \"grid\",\n                gridTemplateColumns: \"14% 16% 14% 14% 14% 14% 14%\",\n                padding: '0px'\n            }}>\n                {\n                    myTasks.map((tasks, columnIndex) => (\n                        <Column\n                            key={`column-week ${columnIndex}`}\n                            {...{ tasks, columnIndex, handleMoveMyTask, delIconClick, addTodo, editTodo }}\n                            WEEK\n                        />\n                    ))\n                }\n            </div>\n        </DndProvider>\n    );\n}\n\nexport default Todo\n","/usr/src/app/src/components/Todo.js",["155","156","157","158"],"import React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5backend from \"react-dnd-html5-backend\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Column from \"./TodoComponents/Column\";\nimport CustomDragLayer from \"./TodoComponents/CustomDragLayer\";\nimport './Todo.scss';\n\nimport { GET_TODOS } from './../graphql/index';\nimport { testTodos } from './../config';\n\nconst Todo = () => {\n    // const [myTasks, moveMyTask] = useState(tasks);\n\n    // const {loading, error, data} = useQuery(GET_TODOS);\n    const loading = true;\n    const data = { 'getTodo': testTodos }\n\n    const parseQueryData = (todos) => {\n        return [\n            {\n                title: 'Todo',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Todo') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'Doing',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Doing') return true;\n                    else return false;\n                })\n            },\n            {\n                title: 'Completed',\n                tasks: todos.filter(todo => {\n                    if (todo.category === 'Completed') return true;\n                    else return false;\n                })\n            }\n        ];\n    }\n    const t = parseQueryData(data.getTodo);\n\n    const [myTasks, moveMyTask] = useState(t);\n\n    const handleMoveMyTask = (from, to) => {\n        // TODO: comunicate with backend `updateTodo`, if update successfully then run\n        // TODO: else CRASH(server error?)\n        const { task, columnIndex: fromColumnIndex, index } = from;\n        console.log({'columnidx': fromColumnIndex})\n        const { columnIndex: toColumnIndex } = to;\n\n        const newMyTasks = [...myTasks];\n        // remove task\n        newMyTasks[fromColumnIndex].tasks.splice(index, 1);\n        // move task\n        newMyTasks[toColumnIndex].tasks.push(task);\n        moveMyTask(newMyTasks);\n    };\n\n    const delIconClick = (event, { columnIndex, index, id }) => {\n        event.stopPropagation();\n        // TODO: comunicate with backend `deleteTodo`, if delete successfully then run the following\n        const newMyTasks = [...myTasks];\n        newMyTasks[columnIndex].tasks.splice(index, 1);\n        moveMyTask(newMyTasks);\n    }\n    const addTodo = (title) => {\n        // TODO: comunicate with backend `addTodo`, if add successfully then run\n        // TODO: trigger input form\n        alert('add ' + title);\n    }\n\n    const editTodo = ({ columnIndex, index, id, name }) => {\n        // TODO: comunicate with backend `updateTodo`, if update successfully then run\n        // TODO: trigger input form\n        alert('edit ' + name);\n    }\n\n    return (\n        <DndProvider backend={HTML5backend}>\n            <CustomDragLayer />\n            <div className=\"task-board\" style={{\n                display: \"grid\",\n                gridTemplateColumns: \"33% 34% 33%\",\n                padding: '0px'\n            }}>\n                {\n                    myTasks.map((tasks, columnIndex) => (\n                        <Column key={`column ${columnIndex}`} {...{ tasks, columnIndex, handleMoveMyTask, delIconClick, addTodo, editTodo }} />\n                    ))\n                }\n            </div>\n        </DndProvider>\n    );\n}\n\nexport default Todo\n","/usr/src/app/src/components/Calendar.js",["159"],"import React, { Component } from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed\n\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const CalendarStyle = {\n            margin: \"0vw\",\n            background: \"#FFFFFF\",\n            textAlign: \"left\",\n            borderRadius: '3px',\n            padding: '3px',\n            border: '1px solid rgba(34, 36, 38, 0.15)'\n        };\n\n        return (\n            <div style={CalendarStyle} className=\"Calendar\">\n                <FullCalendar\n                    height=\"100%\"\n                    aspectRatio=\"1\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    initialView=\"dayGridMonth\"\n                    dateClick={this.handleDateClick}\n                    editable={true}\n                    headerToolbar={{\n                        left: \"\",\n                        center: \"title\",\n                        right: \"\"\n                    }}\n                    events={[\n                        { title: '', date: '2021-01-18' },\n                        { title: '', date: '2021-01-19' },\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default Calendar","/usr/src/app/src/components/SideBar.js",["160","161","162","163","164","165","166"],"import React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5backend from \"react-dnd-html5-backend\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Column from \"./TodoComponents/Column\";\nimport CustomDragLayer from \"./TodoComponents/CustomDragLayer\";\nimport './Todo.scss';\n\nimport { GET_TODOS } from './../graphql/index';\nimport { testTodos } from './../config';\n\nconst Todo = () => {\n    // const [myTasks, moveMyTask] = useState(tasks);\n\n    // const {loading, error, data} = useQuery(GET_TODOS);\n    const loading = true;\n    const data = { 'getTodo': testTodos }\n\n    const parseQueryData = (todos) => {\n        return [\n            {\n                title: 'Todo',\n                tasks: todos\n            }\n        ];\n    }\n    const t = parseQueryData(data.getTodo);\n\n    const [myTasks, moveMyTask] = useState(t);\n\n    const handleMoveMyTask = (from, to) => {\n        // TODO: comunicate with backend `updateTodo`, if update successfully then run\n        // TODO: else CRASH(server error?)\n        const { task, columnIndex: fromColumnIndex, index } = from;\n        console.log({ 'columnidx': fromColumnIndex })\n        const { columnIndex: toColumnIndex } = to;\n\n        const newMyTasks = [...myTasks];\n        // remove task\n        // newMyTasks[fromColumnIndex].tasks.splice(index, 1);\n        // // move task\n        // newMyTasks[toColumnIndex].tasks.push(task);\n        moveMyTask(newMyTasks);\n    };\n\n    const delIconClick = (event, { index, id }) => {\n        event.stopPropagation();\n        // TODO: comunicate with backend `deleteTodo`, if delete successfully then run the following\n        console.log('sidebar')\n        const newMyTasks = [...myTasks];\n        newMyTasks[0].tasks.splice(index, 1);\n        moveMyTask(newMyTasks);\n    }\n    const addTodo = (title) => {\n        // TODO: comunicate with backend `addTodo`, if add successfully then run\n        // TODO: trigger input form\n        alert('add ' + title);\n    }\n\n    const editTodo = ({ columnIndex, index, id, name }) => {\n        // TODO: comunicate with backend `updateTodo`, if update successfully then run\n        // TODO: trigger input form\n        alert('edit ' + name);\n    }\n\n    return (\n        <DndProvider backend={HTML5backend}>\n            <CustomDragLayer />\n            <div className=\"task-board\" style={{\n                width: '100%'\n            }}>\n                <Column\n                    key={`column-week -1`}\n                    {...{ tasks: myTasks[0], columnIndex: -1, handleMoveMyTask, delIconClick, addTodo, editTodo }}\n                    WEEK\n                />\n            </div>\n        </DndProvider>\n    );\n}\n\nexport default Todo\n","/usr/src/app/src/graphql/index.js",[],"/usr/src/app/src/components/TodoComponents/Column.jsx",[],"/usr/src/app/src/components/TodoComponents/CustomDragLayer.jsx",[],"/usr/src/app/src/graphql/mutations.js",[],"/usr/src/app/src/graphql/queries.js",[],"/usr/src/app/src/graphql/subscriptions.js",[],"/usr/src/app/src/components/TodoComponents/Card.jsx",["167","168","169"],"import React, { useState } from \"react\";\nimport { Icon, Button } from 'semantic-ui-react';\nimport \"./Card.scss\";\n\nconst Card = ({ task: {\n    id,\n    name,\n    subject,\n    color,\n    deadLine\n}, columnIndex, index, delIconClick, editTodo }) => {\n    const [isOver, setIsOver] = useState(false);\n    const [inputOpen, setInputOpen] = useState()\n\n    const handleOnOver = () => setIsOver(true);\n    const handleOnLeave = () => setIsOver(false);\n\n    const cardStyle = {\n        width: '100%',\n        background: color,\n        marginBottom: '10px',\n        padding: '10px 10px',\n        borderRadius: '3px',\n        cursor: 'pointer',\n    };\n\n    return (\n        <div\n            onMouseEnter={handleOnOver}\n            onMouseLeave={handleOnLeave}\n        >\n            <div\n                className={`card`}\n                onClick={() => editTodo({ columnIndex, index, id, name })}\n                style={cardStyle}\n            >\n                {name}\n                {isOver ? (\n\n                    <Icon\n                        name='delete'\n                        size='large'\n                        color='red'\n                        style={{ float: 'right' }}\n                        onClick={(event) => delIconClick(event, { columnIndex, index, id })}\n                    />\n                ) : (<></>)}\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","/usr/src/app/src/components/TodoComponents/EmptyCard.jsx",[],"/usr/src/app/src/components/TodoComponents/DraggableCard.jsx",[],{"ruleId":"170","severity":1,"message":"171","line":1,"column":8,"nodeType":"172","messageId":"173","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"174","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":11},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"170","severity":1,"message":"179","line":2,"column":33,"nodeType":"172","messageId":"173","endLine":2,"endColumn":38},{"ruleId":"170","severity":1,"message":"180","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":13},{"ruleId":"170","severity":1,"message":"181","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":12},{"ruleId":"170","severity":1,"message":"182","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"183","line":3,"column":38,"nodeType":"172","messageId":"173","endLine":3,"endColumn":45},{"ruleId":"170","severity":1,"message":"184","line":3,"column":47,"nodeType":"172","messageId":"173","endLine":3,"endColumn":52},{"ruleId":"170","severity":1,"message":"185","line":3,"column":54,"nodeType":"172","messageId":"173","endLine":3,"endColumn":59},{"ruleId":"170","severity":1,"message":"186","line":1,"column":29,"nodeType":"172","messageId":"173","endLine":1,"endColumn":37},{"ruleId":"170","severity":1,"message":"187","line":44,"column":23,"nodeType":"172","messageId":"173","endLine":44,"endColumn":30},{"ruleId":"170","severity":1,"message":"186","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"188","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"182","line":2,"column":25,"nodeType":"172","messageId":"173","endLine":2,"endColumn":29},{"ruleId":"170","severity":1,"message":"189","line":2,"column":31,"nodeType":"172","messageId":"173","endLine":2,"endColumn":36},{"ruleId":"170","severity":1,"message":"190","line":2,"column":38,"nodeType":"172","messageId":"173","endLine":2,"endColumn":44},{"ruleId":"170","severity":1,"message":"191","line":32,"column":20,"nodeType":"172","messageId":"173","endLine":32,"endColumn":29},{"ruleId":"170","severity":1,"message":"187","line":39,"column":25,"nodeType":"172","messageId":"173","endLine":39,"endColumn":32},{"ruleId":"170","severity":1,"message":"186","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"188","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"192","line":3,"column":23,"nodeType":"172","messageId":"173","endLine":3,"endColumn":31},{"ruleId":"170","severity":1,"message":"193","line":18,"column":11,"nodeType":"172","messageId":"173","endLine":18,"endColumn":19},{"ruleId":"170","severity":1,"message":"194","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":18},{"ruleId":"170","severity":1,"message":"195","line":4,"column":20,"nodeType":"172","messageId":"173","endLine":4,"endColumn":31},{"ruleId":"170","severity":1,"message":"196","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":19},{"ruleId":"170","severity":1,"message":"187","line":16,"column":11,"nodeType":"172","messageId":"173","endLine":16,"endColumn":18},{"ruleId":"170","severity":1,"message":"194","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":18},{"ruleId":"170","severity":1,"message":"195","line":4,"column":20,"nodeType":"172","messageId":"173","endLine":4,"endColumn":31},{"ruleId":"170","severity":1,"message":"196","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":19},{"ruleId":"170","severity":1,"message":"187","line":16,"column":11,"nodeType":"172","messageId":"173","endLine":16,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":8,"column":5,"nodeType":"199","messageId":"200","endLine":10,"endColumn":6},{"ruleId":"170","severity":1,"message":"194","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":18},{"ruleId":"170","severity":1,"message":"195","line":4,"column":20,"nodeType":"172","messageId":"173","endLine":4,"endColumn":31},{"ruleId":"170","severity":1,"message":"196","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":19},{"ruleId":"170","severity":1,"message":"187","line":16,"column":11,"nodeType":"172","messageId":"173","endLine":16,"endColumn":18},{"ruleId":"170","severity":1,"message":"201","line":34,"column":17,"nodeType":"172","messageId":"173","endLine":34,"endColumn":21},{"ruleId":"170","severity":1,"message":"202","line":34,"column":53,"nodeType":"172","messageId":"173","endLine":34,"endColumn":58},{"ruleId":"170","severity":1,"message":"203","line":36,"column":30,"nodeType":"172","messageId":"173","endLine":36,"endColumn":43},{"ruleId":"170","severity":1,"message":"190","line":2,"column":16,"nodeType":"172","messageId":"173","endLine":2,"endColumn":22},{"ruleId":"170","severity":1,"message":"204","line":13,"column":12,"nodeType":"172","messageId":"173","endLine":13,"endColumn":21},{"ruleId":"170","severity":1,"message":"205","line":13,"column":23,"nodeType":"172","messageId":"173","endLine":13,"endColumn":35},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'Route' is defined but never used.","'Event' is defined but never used.","'Note' is defined but never used.","'Grid' is defined but never used.","'Segment' is defined but never used.","'Modal' is defined but never used.","'Image' is defined but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'setErrors' is assigned a value but never used.","'GET_NOTE' is defined but never used.","'pathname' is assigned a value but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'GET_TODOS' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'task' is assigned a value but never used.","'index' is assigned a value but never used.","'toColumnIndex' is assigned a value but never used.","'inputOpen' is assigned a value but never used.","'setInputOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]