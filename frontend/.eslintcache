[{"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/index.js":"1","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/App.js":"2","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/reportWebVitals.js":"3","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Home.js":"4","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Main.js":"5","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/NavBar.js":"6","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Note.js":"7","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/CalTest.js":"8","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Login.js":"9","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Event.js":"10","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Register.js":"11","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Week.js":"12","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Calendar.js":"13","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/SideBar.js":"14","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/config.js":"15","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Todo.js":"16","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/MyModal.js":"17","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/DateFormat.js":"18","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/Column.jsx":"19","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/CustomDragLayer.jsx":"20","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/Card.jsx":"21","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/DraggableCard.jsx":"22"},{"size":500,"mtime":1611075259640,"results":"23","hashOfConfig":"24"},{"size":1760,"mtime":1611075594842,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611075224633,"results":"26","hashOfConfig":"24"},{"size":1601,"mtime":1611075259636,"results":"27","hashOfConfig":"24"},{"size":918,"mtime":1611075259637,"results":"28","hashOfConfig":"24"},{"size":624,"mtime":1611075259638,"results":"29","hashOfConfig":"24"},{"size":1027,"mtime":1611075259638,"results":"30","hashOfConfig":"24"},{"size":6733,"mtime":1611075259636,"results":"31","hashOfConfig":"24"},{"size":1306,"mtime":1611075259637,"results":"32","hashOfConfig":"24"},{"size":1180,"mtime":1611075259636,"results":"33","hashOfConfig":"24"},{"size":1323,"mtime":1611075259638,"results":"34","hashOfConfig":"24"},{"size":6083,"mtime":1611075259639,"results":"35","hashOfConfig":"24"},{"size":1248,"mtime":1611075259636,"results":"36","hashOfConfig":"24"},{"size":2716,"mtime":1611075259638,"results":"37","hashOfConfig":"24"},{"size":1229,"mtime":1611076126212,"results":"38","hashOfConfig":"24"},{"size":2097,"mtime":1611076006545,"results":"39","hashOfConfig":"24"},{"size":9111,"mtime":1611075259637,"results":"40","hashOfConfig":"24"},{"size":628,"mtime":1611075259636,"results":"41","hashOfConfig":"24"},{"size":1308,"mtime":1611076045663,"results":"42","hashOfConfig":"24"},{"size":1492,"mtime":1611076045666,"results":"43","hashOfConfig":"24"},{"size":726,"mtime":1611076045660,"results":"44","hashOfConfig":"24"},{"size":553,"mtime":1611076045668,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"si2iy3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/index.js",[],["102","103"],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/App.js",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/reportWebVitals.js",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Home.js",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Main.js",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/NavBar.js",["104"],"import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { navBarColor, serviceTitle } from './../config';\n\nconst divStyle = {\n    width: \"100%\",\n    backgroundColor: navBarColor,\n    display: \"flex\",\n    flexDirection: \"row\"\n};\n\nconst NavBar = () => (\n    <div style={divStyle}>\n        <Header style={{ flexGrow: 100, margin: '20px', justifyContent: 'center', color: '#fff' }} as='h1' textAlign='center'>\n            { serviceTitle }\n        </Header>\n    </div>\n)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(NavBar);\nexport default NavBar;","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Note.js",["105","106","107"],"import React, { useState, useEffect } from 'react'\nimport { Form, TextArea } from 'semantic-ui-react'\nimport './styles.css'\n\nfunction Note() {\n    const [contents, setContents] = useState('')\n    const [init, setInit] = useState(false)\n\n    const writeInput = (msg) => {\n        setContents(msg)\n        //saveContents\n        console.log(contents)\n    }\n\n    // useEffect(() => {\n    //   if(!init) getContents()\n    // })\n\n    // const getContents = async () => {\n    //   setInit(true)\n    //   const res = await instance.get('/getContents')\n    //   if (res.data.message === 'success') {\n    //     setContents(res.data.contents)\n    //   }\n    // }\n\n    return (\n        <>\n            <Form >\n                <TextArea\n                    placeholder='Take some notes...'\n                    onInput={(e) => writeInput(e.target.value)}\n                    value={contents}\n                    style={{ height: '100%', borderRadius: '3px' }}\n                />\n            </Form>\n        </>\n    )\n}\n\nexport default Note\n","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/CalTest.js",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Login.js",["108","109"],"import React from 'react';\nimport { Grid, Form, Button, Message, Icon, Header, Segment } from 'semantic-ui-react';\n\nconst divStyle = {\n    borderRadius: '25px',\n    padding: '1.5rem',\n    boxShadow: '8px 8px 15px #D9DDE6, -8px - 8px 15px #EFF5FE',\n    background: \"#E4E9F2\",\n};\n\nconst titleStyle = {\n    justifyContent: 'center'\n};\n\nconst LoginForm = () => {\n    return (\n        <Grid textAlign='center' style={divStyle} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' style={titleStyle} icon>\n                    <Icon name='user' />\n                    <Header.Content>\n                        login\n                    </Header.Content>\n                </Header>\n                <Form icon>\n                    <Form.Input icon='user' iconPosition='left' placeholder='username' />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type='password'\n                    />\n                    <Button color='teal' fluid>\n                        Login\n                    </Button>\n                </Form>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nexport default LoginForm;","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Event.js",["110","111","112","113","114"],"import React, { useState, useEffect } from 'react'\nimport { Message, Icon, Grid, Input, Button } from 'semantic-ui-react'\nimport './styles.css'\nimport 'semantic-ui-css/semantic.min.css'\n\n\nconst Event = (props) => {\n  //edit = 1 => go to edit mode\n  // const [edit, setEdit] = useState(false)\n  // const [name, setName] = useState('')\n  // const [deadLine, setDeadline] = useState([2020, 12, 14, 19, 16]); // 2020/12/14 19:16\n  // const [date, setDate] = useState([2020, 12, 14]); // 2020/12/14\n  // const [startTime, setStartTime] = useState([19, 16]); // 19:16\n  // const [endTime, setEndTime] = useState([19, 16]); // 19:16\n  // const [onCalendar, setOnCalendar] = useState(false)\n  // const [review, setReview] = useState(false)\n  // const [type, setType] = useState('')\n\n  // const [color, setColor] = useState('')\n  const {color} = props\n\n  return (\n    <div id=\"event-container\">\n      <Message color={color} style={{ height: 30, width: '100%', draggable: 'true', overflow: 'auto', padding:0}}>\n        <Icon name='edit' style={{position: 'absolute', right: 10, top: 3.5, display: 'inline', width:1}} />\n        event\n      </Message>\n    </div>\n  )\n}\n\nexport default Event;","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Register.js",["115","116"],"import React from 'react';\nimport { Grid, Form, Button, Message, Icon, Header, Segment } from 'semantic-ui-react';\n\nconst divStyle = {\n    borderRadius: '25px',\n    padding: '1.5rem',\n    boxShadow: '8px 8px 15px #D9DDE6, -8px - 8px 15px #EFF5FE',\n    background: \"#E4E9F2\",\n};\n\nconst titleStyle = {\n    justifyContent: 'center'\n};\n\nconst RegisterForm = () => {\n    return (\n        <Grid textAlign='center' style={divStyle} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' style={titleStyle} icon>\n                    <Icon name='user plus' />\n                    <Header.Content>\n                        Register\n                    </Header.Content>\n                </Header>\n                <Form icon>\n                    <Form.Input icon='user' iconPosition='left' placeholder='username' />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type='password'\n                    />\n                    <Button color='teal' fluid>\n                        Register\n                    </Button>\n                </Form>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nexport default RegisterForm;","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Week.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React, { useEffect, useState, useRef, memo } from \"react\";\nimport { Modal, Header, Form, Input, TextArea, Button, Select, Icon } from 'semantic-ui-react'\nimport \"./styles.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport PropTypes from 'prop-types'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./DateFormat\";\n// import MyModal from './MyModal';\n\nconst WeekStyle = {\n    background: \"#FFFFFF\"\n}\n\nconst Week = () => {\n    const [state, setState] = useState({\n        weekendsVisible: true,\n        calendarEvents: [\n            {\n                id: 1,\n                title: \"Sleep\",\n                color: \"#388e3c\",\n                start: \"2021-01-19T00:00:00\",\n                end: \"2021-01-19T08:00:00\"\n            }\n        ]\n    });\n    const [modalOpen, setModalOpen] = useState(false)\n\n    const [startDate, setStartDate] = useState()\n    const [endDate, setEndDate] = useState()\n    const [color, setColor] = useState()\n    const [title, setTitle] = useState()\n    const [id, setId] = useState('0')\n    \n    const options = [\n        { key: 'm', text: 'Male', value: 'male' },\n        { key: 'f', text: 'Female', value: 'female' },\n        { key: 'o', text: 'Other', value: 'other' },\n    ]\n    \n    const handleEventReceive = (eventInfo) => {\n        console.log(eventInfo);\n        setModalOpen(true);      \n    };\n\n    useEffect(() => {\n        console.log(\"setModalOpen changes\")\n        const newEvent = {\n            //id: id,\n            //title: title,\n            //color: color,\n            start: startDate,\n            end: endDate,\n        };\n\n        setState((state) => {\n            return {\n                ...state,\n                calendarEvents: state.calendarEvents.concat(newEvent)\n            };\n        });\n    }, state)\n\n    return (\n        <div style={WeekStyle} className=\"Week\">\n            <FullCalendar\n                height=\"100%\"\n                plugins={[dayGridPlugin, interactionPlugin]}\n                initialView=\"dayGridWeek\"\n                headerToolbar={false}\n                editable={true}\n                selectable={true}\n                selectMirror={true}\n                dayMaxEvents={true}\n                weekends={state.weekendsVisible}\n                events={state.calendarEvents}\n                droppable={true}\n                eventReceive={handleEventReceive}\n            />\n            <Modal\n                key='modal1'\n                open={modalOpen}\n                size='small'\n                closeOnEscape={true}\n                closeOnRootNodeClick={true}\n            >\n                <Header icon='browser' content='Event' />\n                <Modal.Content>\n                    <Form>\n                        <Form.Field\n                            id='form-input-control-event-title'\n                            control={Input}\n                            label='Event Title'\n                            placeholder='Event Title'\n                        />\n                        <Form.Group widths='equal'>\n                            <Form.Field>\n                                <Form.Field\n                                    id='form-input-control-start-time'\n                                    label='Start Time'\n                                />\n                                <DatePicker\n                                    selected={startDate}\n                                    onChange={(date) => { setStartDate(date) }}\n                                    showTimeSelect={true}\n                                    timeIntervals={15}\n                                    dateFormat=\"yyyy-MM-dd hh:mm:ss\"\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <Form.Field\n                                    id='form-input-control-end-time'\n                                    label='End Time'\n                                />\n                                <DatePicker\n                                    selected={endDate}\n                                    onChange={(date) => { setEndDate(date) }}\n                                    showTimeSelect={true}\n                                    timeIntervals={15}\n                                    dateFormat=\"yyyy-MM-dd hh:mm:ss\"\n                                />\n                            </Form.Field>\n                            <Form.Select\n                                label='Tag'\n                                options={options}\n                                placeholder='Event Type'\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button\n                        negative\n                        type='button'\n                        icon='remove'\n                        labelPosition='right'\n                        onClick={\n                            (e) => {\n                                setModalOpen(false)\n                            }\n                        }\n                        content='Cancel'\n                    />\n                    <Button\n                        positive\n                        type='button'\n                        icon='checkmark'\n                        labelPosition='right'\n                        onClick={\n                            (e) => {\n                                setModalOpen(false)\n                            }\n                        }\n                        content='Confirm'\n                    />\n                </Modal.Actions>\n            </Modal>\n\n        </div>\n    );\n}\n\n\n/*\nModal.propTypes = {\n    modalOpen: PropTypes.bool.isRequired,\n    handleClose: PropTypes.func.isRequired,\n    valueIntoModal: PropTypes.string.isRequired\n}*/\n\nexport default Week\n","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Calendar.js",["133"],"import React, { Component } from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed\n\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const CalendarStyle = {\n            margin: \"0vw\",\n            background: \"#FFFFFF\",\n            textAlign: \"left\"\n        };\n\n        return (\n            <div style={CalendarStyle} className=\"Calendar\">\n                <FullCalendar\n                    height=\"100%\"\n                    aspectRatio=\"1\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    initialView=\"dayGridMonth\"\n                    dateClick={this.handleDateClick}\n                    editable={true}\n                    headerToolbar={{\n                        left: \"\",\n                        center: \"title\",\n                        right: \"\"\n                    }}\n                    events={[\n                        { title: '', date: '2021-01-18' },\n                        { title: '', date: '2021-01-19' },\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default Calendar","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/SideBar.js",["134","135","136","137"],"import React, { useEffect, useState, useRef, memo } from \"react\";\nimport \"./styles.css\";\nimport { sideBarColor } from './../config';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\nconst sideBarStyle = {\n    height: '90vh',\n    background: sideBarColor\n}\n\nconst ExternalEvent = memo(({ event }) => {\n    let elRef = useRef(null);\n\n\n    useEffect(() => {\n        let draggable = new Draggable(elRef.current, {\n            eventData: function () {\n                return { ...event, create: true };\n            }\n        });\n\n        // a cleanup function\n        return () => draggable.destroy();\n    });\n\n    return (\n        <div\n            ref={elRef}\n            className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n            title={event.title}\n            style={{\n                backgroundColor: event.color,\n                borderColor: event.color,\n                cursor: \"pointer\"\n            }}\n        >\n            <div className=\"fc-event-main\">\n                <div>\n                    <strong>{event.title}</strong>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nconst SideBar = () => {\n    const [state, setState] = useState({\n        weekendsVisible: true,\n        externalEvents: [\n            { title: \"Art 1\", color: \"#0097a7\", id: 34432 },\n            { title: \"Art 2\", color: \"#f44336\", id: 323232 },\n            { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\n            { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\n        ]\n    });\n    // add external events\n    const addEvent = () => {\n        let newEvent = {\n            id: 3433,\n            title: \"Timed event\",\n            color: \"#333333\",\n            start: \"2020-12-31\",\n            end: \"2020-12-31\",\n            custom: \"custom stuff\"\n        };\n\n        setState((state) => {\n            return {\n                ...state,\n                externalEvents: state.externalEvents.concat(newEvent)\n            };\n        });\n    };\n    return (\n        <div style={{ sideBarStyle }}>\n            <div style={{ margin: \"0 0 20px\" }}>\n                <input\n                    type=\"submit\"\n                    name=\"name\"\n                    onClick={addEvent}\n                    value=\"add external event\"\n                />\n            </div>\n            <div id=\"external-events\">\n                {state.externalEvents.map((event) => (\n                    <ExternalEvent key={event.id} event={event} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default SideBar","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/config.js",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/Todo.js",["138","139","140"],"import React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5backend from \"react-dnd-html5-backend\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Column from \"./TodoComponents/Column\";\nimport CustomDragLayer from \"./TodoComponents/CustomDragLayer\";\nimport './Todo.scss';\n\n// import { GET_TODOS } from './../../graphql/index';\n\nconst tasks = [\n    {\n        title: \"todo\",\n        tasks: [\"Read chapters for next class\"]\n    },\n    {\n        title: \"doing\",\n        tasks: [\"Complete in-class activity\", \"Brainsotrm project ideas\", \"Brainsotrm project ideas\", \"Brainsotrm project ideas\"]\n    },\n    {\n        title: \"done\",\n        tasks: []\n    }\n];\n\n// const columnStyle = {\n//     display: 'grid',\n//     align\n// };\n\nconst Todo = () => {\n    const [myTasks, moveMyTask] = useState(tasks);\n\n    // const {loading, error, data} = useQuery(GET_TODOS);\n\n    const handleMoveMyTask = (from, to) => {\n        const { task, columnIndex: fromColumnIndex, index } = from;\n        const { columnIndex: toColumnIndex } = to;\n\n        const newMyTasks = [...myTasks];\n        // remove task\n        newMyTasks[fromColumnIndex].tasks.splice(index, 1);\n        // move task\n        newMyTasks[toColumnIndex].tasks.push(task);\n        moveMyTask(newMyTasks);\n    };\n\n    const columns = myTasks.map((tasks, columnIndex) => {\n        const propsToColumn = { tasks, columnIndex, handleMoveMyTask };\n        return <Column key={`column ${columnIndex}`} {...propsToColumn} />;\n    });\n\n    return (\n        <DndProvider backend={HTML5backend}>\n            <CustomDragLayer />\n            <div className=\"task-board\" style={{\n                display: \"grid\",\n                gridTemplateColumns: \"33% 34% 33%\",\n                padding: '0px'\n            }}>\n                {\n                    myTasks.map((tasks, columnIndex) => (\n                        <Column key={`column ${columnIndex}`} {...{ tasks, columnIndex, handleMoveMyTask }} />\n                    ))\n                }\n            </div>\n        </DndProvider>\n    );\n}\n\nexport default Todo\n","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/MyModal.js",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/DateFormat.js",["141","142"],"Date.prototype.format = function (fmt) {\n    var o = {\n        \"M+\": this.getMonth() + 1, \n        \"d+\": this.getDate(), \n        \"h+\": this.getHours(), \n        \"m+\": this.getMinutes(), \n        \"s+\": this.getSeconds(), \n        \"q+\": Math.floor((this.getMonth() + 3) / 3), \n        \"S\": this.getMilliseconds() \n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/Column.jsx",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/CustomDragLayer.jsx",[],"/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/Card.jsx",["143"],"import React, { useState } from \"react\";\nimport { Icon, Button } from 'semantic-ui-react';\nimport \"./Card.scss\";\n\nconst Card = ({ task, empty }) => {\n    const [isOver, setIsOver] = useState(false);\n\n    const handleOnOver = () => setIsOver(true);\n    const handleOnLeave = () => setIsOver(false);\n\n    return (\n        <div\n            onMouseEnter={handleOnOver}\n            onMouseLeave={handleOnLeave}\n        >\n            <div className={`card ` + (empty ? \"card--empty\" : \"\")}>\n                {task}\n                {isOver ? (\n                    <Icon name='delete' size='large' color='red' style={{ float: 'right' }} />\n                ) : (<></>)}\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","/Users/mhsuab/Desktop/webprog/goodui/frontend/src/components/TodoComponents/DraggableCard.jsx",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"152","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"153","line":7,"column":12,"nodeType":"150","messageId":"151","endLine":7,"endColumn":16},{"ruleId":"148","severity":1,"message":"154","line":7,"column":18,"nodeType":"150","messageId":"151","endLine":7,"endColumn":25},{"ruleId":"148","severity":1,"message":"155","line":2,"column":30,"nodeType":"150","messageId":"151","endLine":2,"endColumn":37},{"ruleId":"148","severity":1,"message":"156","line":2,"column":53,"nodeType":"150","messageId":"151","endLine":2,"endColumn":60},{"ruleId":"148","severity":1,"message":"157","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"152","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"158","line":2,"column":25,"nodeType":"150","messageId":"151","endLine":2,"endColumn":29},{"ruleId":"148","severity":1,"message":"159","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":36},{"ruleId":"148","severity":1,"message":"160","line":2,"column":38,"nodeType":"150","messageId":"151","endLine":2,"endColumn":44},{"ruleId":"148","severity":1,"message":"155","line":2,"column":30,"nodeType":"150","messageId":"151","endLine":2,"endColumn":37},{"ruleId":"148","severity":1,"message":"156","line":2,"column":53,"nodeType":"150","messageId":"151","endLine":2,"endColumn":60},{"ruleId":"148","severity":1,"message":"161","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"148","severity":1,"message":"162","line":1,"column":46,"nodeType":"150","messageId":"151","endLine":1,"endColumn":50},{"ruleId":"148","severity":1,"message":"163","line":2,"column":38,"nodeType":"150","messageId":"151","endLine":2,"endColumn":46},{"ruleId":"148","severity":1,"message":"164","line":2,"column":56,"nodeType":"150","messageId":"151","endLine":2,"endColumn":62},{"ruleId":"148","severity":1,"message":"165","line":2,"column":64,"nodeType":"150","messageId":"151","endLine":2,"endColumn":68},{"ruleId":"148","severity":1,"message":"166","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":22},{"ruleId":"148","severity":1,"message":"167","line":7,"column":29,"nodeType":"150","messageId":"151","endLine":7,"endColumn":38},{"ruleId":"148","severity":1,"message":"168","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"148","severity":1,"message":"169","line":35,"column":12,"nodeType":"150","messageId":"151","endLine":35,"endColumn":17},{"ruleId":"148","severity":1,"message":"170","line":35,"column":19,"nodeType":"150","messageId":"151","endLine":35,"endColumn":27},{"ruleId":"148","severity":1,"message":"171","line":36,"column":12,"nodeType":"150","messageId":"151","endLine":36,"endColumn":17},{"ruleId":"148","severity":1,"message":"172","line":36,"column":19,"nodeType":"150","messageId":"151","endLine":36,"endColumn":27},{"ruleId":"148","severity":1,"message":"173","line":37,"column":12,"nodeType":"150","messageId":"151","endLine":37,"endColumn":14},{"ruleId":"148","severity":1,"message":"174","line":37,"column":16,"nodeType":"150","messageId":"151","endLine":37,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":66,"column":8,"nodeType":"150","endLine":66,"endColumn":13},{"ruleId":"175","severity":1,"message":"177","line":66,"column":8,"nodeType":"150","endLine":66,"endColumn":13,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":8,"column":5,"nodeType":"181","messageId":"182","endLine":10,"endColumn":6},{"ruleId":"148","severity":1,"message":"183","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":20},{"ruleId":"148","severity":1,"message":"184","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":21},{"ruleId":"148","severity":1,"message":"166","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":22},{"ruleId":"148","severity":1,"message":"185","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":25},{"ruleId":"148","severity":1,"message":"186","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"187","line":4,"column":20,"nodeType":"150","messageId":"151","endLine":4,"endColumn":31},{"ruleId":"148","severity":1,"message":"188","line":48,"column":11,"nodeType":"150","messageId":"151","endLine":48,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":1,"column":1,"nodeType":"191","messageId":"192","endLine":15,"endColumn":2},{"ruleId":"193","severity":1,"message":"194","line":13,"column":97,"nodeType":"195","messageId":"192","endLine":13,"endColumn":99},{"ruleId":"148","severity":1,"message":"160","line":2,"column":16,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'init' is assigned a value but never used.","'setInit' is assigned a value but never used.","'Message' is defined but never used.","'Segment' is defined but never used.","'useState' is defined but never used.","'Grid' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'useRef' is defined but never used.","'memo' is defined but never used.","'TextArea' is defined but never used.","'Select' is defined but never used.","'Icon' is defined but never used.","'timeGridPlugin' is defined but never used.","'Draggable' is defined but never used.","'PropTypes' is defined but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'endDate' and 'startDate'. Either include them or remove the dependency array.",["198"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FullCalendar' is defined but never used.","'dayGridPlugin' is defined but never used.","'interactionPlugin' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'columns' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [endDate, startDate]",{"range":"201","text":"202"},[2001,2006],"[endDate, startDate]"]